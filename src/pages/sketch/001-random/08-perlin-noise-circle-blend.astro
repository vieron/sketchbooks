---
import Sketch from "../../../layouts/Sketch.astro";
---

<Sketch title="003 Line">
  <script>
    import "p5";

    window.sketch = (p, container) => {
      let noiseMax = 0.6; // between 0 and 10
      let phase = 0;
      let zoff = 0;
      let radiusVariation: number;
      let hue = 0;
      let saturation = 0;

      let avgRadius: number;
      let minRadius: number;
      let maxRadius: number;

      p.setup = () => {
        radiusVariation = Math.min(p.windowWidth, p.windowHeight) * 0.4;
        avgRadius = Math.min(p.windowWidth, p.windowHeight) * 0.3;
        minRadius = avgRadius - radiusVariation * 0.5;
        maxRadius = avgRadius + radiusVariation * 0.5;

        p.createCanvas(container.clientWidth, container.clientHeight);
        p.colorMode(p.HSL);
        // frameRate(20);
        p.background(p.color("#fff"));
      };

      function drawBlob({
        center = [p.width / 2, p.height / 2],
        hue = 0,
        phase = 0,
        zoff = 0,
        radiusRange = [minRadius, maxRadius],
      }) {
        p.translate(center[0], center[1]);
        // stroke(hue, 90, 50, 0.8);
        p.stroke(0, 0, 0, 0.15);
        p.strokeWeight(1);
        p.noFill();
        p.beginShape();
        for (let a = 0; a < p.TWO_PI; a += 0.01) {
          let xoff = p.map(p.cos(a + phase), -1, 1, 0, noiseMax);
          let yoff = p.map(p.sin(a + phase), -1, 1, 0, noiseMax);
          let r = p.map(
            p.noise(xoff, yoff, zoff),
            0,
            1,
            radiusRange[0],
            radiusRange[1]
          );
          let x = r * p.cos(a);
          let y = r * p.sin(a);
          p.vertex(x, y);
        }
        p.endShape(p.CLOSE);
      }

      p.draw = () => {
        drawBlob({
          hue,
          radiusRange: [10, 400],
          phase,
          zoff,
        });

        hue += p.random(20, 100);
        phase += 1;
        zoff += 0.00025;

        if (hue >= 255) {
          hue = 0;
        }
      };
    };
  </script>
</Sketch>
