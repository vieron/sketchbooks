---
import Sketch from "../../../layouts/Sketch.astro";
---

<Sketch title="003 Line">
  <script>
    import p5 from "p5";
    import {
      createTextImage,
      getFontSizeToFit,
    } from "../../../sketch-utils/type";
    import type { FontAttributes } from "../../../sketch-utils/type";
    import { createP5Image } from "../../../sketch-utils/image";

    window.sketch = (p) => {
      // poisson disc
      let tries: number;
      let radius: number;

      // general params
      let textSample: string;
      let framesPerSecond: number;

      let bgColor: string;

      let fontName: string;

      p.setup = () => {
        p.noLoop();
        p.createCanvas(p.windowWidth, p.windowHeight);
        p.strokeWeight(4);
        p.colorMode(p.HSB);
        p.frameRate(framesPerSecond);

        // params
        radius = 17;
        tries = 20;
        textSample = "lorem ipsum";
        framesPerSecond = 1;

        bgColor = "#FFF";

        fontName = p.random(["system-ui"]);
      };

      p.draw = () => {
        p.background(bgColor);

        const fontAttributes: FontAttributes = {
          fontName,
          fontSize: -1,
          fontWeight: 900,
          letterSpacing: "auto",
        };

        const fontSize = getFontSizeToFit({
          textSample,
          width: p.width,
          height: p.height,
          ...fontAttributes,
        });

        fontAttributes.fontSize = fontSize;

        p.textFont(fontName);
        p.textSize(fontSize);
        p.textAlign(p.LEFT, p.TOP);
        p.textStyle(p.BOLD);
        p.text(textSample, 0, 0);

        //
        // COMPUTE LETTERS
        //
        const letters = textSample.split("").map((char, i) => {
          const img = createTextImage({
            textSample: char,
            fontName,
            fontSize,
            fontWeight: 900,
            letterSpacing: "auto",
          });

          return {
            img,
          };
        });

        let lastOffsetX = 0;

        letters.forEach(({ img }) => {
          p.push();
          p.translate(lastOffsetX, 300);
          p.noFill();
          p.stroke("red");
          p.rect(0, 0, img.width, img.height);
          p.image(p.createP5Image(img), 0, 0);
          p.pop();
          lastOffsetX += img.width;
        });
      };
    };
  </script>
</Sketch>
